{"ast":null,"code":"var _jsxFileName = \"/home/torinit/Documents/react-website/o3i/src/pages/AddNode/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CustomButton } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  onDelete,\n  onAdd\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: node.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => onDelete(node.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => onAdd(node.id),\n      children: \"Add Child\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: node.children.map(childNode => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: childNode,\n        onDelete: onDelete,\n        onAdd: onAdd\n      }, childNode.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = TreeNode;\nconst Tree = () => {\n  _s();\n  // Initial state representing the root of the tree\n  const [tree, setTree] = useState({\n    id: 1,\n    value: 'Root Node',\n    children: []\n  });\n\n  // Add a child node\n  const addNode = parentId => {\n    const addRecursive = node => {\n      if (node.id === parentId) {\n        const newNode = {\n          id: Date.now(),\n          value: `New Node ${Date.now()}`,\n          children: []\n        };\n        node.children.push(newNode);\n      } else {\n        node.children.forEach(addRecursive);\n      }\n    };\n    const updatedTree = {\n      ...tree\n    };\n    addRecursive(updatedTree);\n    setTree(updatedTree);\n  };\n\n  // Delete a node\n  const deleteNode = nodeId => {\n    const deleteRecursive = node => {\n      node.children = node.children.filter(child => child.id !== nodeId);\n      node.children.forEach(deleteRecursive);\n    };\n    const updatedTree = {\n      ...tree\n    };\n    deleteRecursive(updatedTree);\n    setTree(updatedTree);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: tree,\n      onDelete: deleteNode,\n      onAdd: addNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Tree, \"N+XAQyRscIYBhdoYvmXEzSb1P7k=\");\n_c2 = Tree;\nexport default Tree;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"Tree\");","map":{"version":3,"names":["React","useState","CustomButton","jsxDEV","_jsxDEV","TreeNode","node","onDelete","onAdd","style","marginLeft","children","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","length","map","childNode","_c","Tree","_s","tree","setTree","addNode","parentId","addRecursive","newNode","Date","now","push","forEach","updatedTree","deleteNode","nodeId","deleteRecursive","filter","child","_c2","$RefreshReg$"],"sources":["/home/torinit/Documents/react-website/o3i/src/pages/AddNode/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { CustomButton } from './style';\n\nconst TreeNode = ({ node, onDelete, onAdd }) => {\n  return (\n    <div style={{ marginLeft: 20 }}>\n      {/* Node value */}\n      <span>{node.value}</span>\n\n      {/* Add and Delete Buttons */}\n      <CustomButton onClick={() => onDelete(node.id)}>Delete</CustomButton>\n      <CustomButton onClick={() => onAdd(node.id)}>Add Child</CustomButton>\n\n      {/* Render child nodes recursively */}\n      {node.children && node.children.length > 0 && (\n        <div>\n          {node.children.map((childNode) => (\n            <TreeNode\n              key={childNode.id}\n              node={childNode}\n              onDelete={onDelete}\n              onAdd={onAdd}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst Tree = () => {\n  // Initial state representing the root of the tree\n  const [tree, setTree] = useState({\n    id: 1,\n    value: 'Root Node',\n    children: []\n  });\n\n  // Add a child node\n  const addNode = (parentId) => {\n    const addRecursive = (node) => {\n      if (node.id === parentId) {\n        const newNode = {\n          id: Date.now(),\n          value: `New Node ${Date.now()}`,\n          children: []\n        };\n        node.children.push(newNode);\n      } else {\n        node.children.forEach(addRecursive);\n      }\n    };\n\n    const updatedTree = { ...tree };\n    addRecursive(updatedTree);\n    setTree(updatedTree);\n  };\n\n  // Delete a node\n  const deleteNode = (nodeId) => {\n    const deleteRecursive = (node) => {\n      node.children = node.children.filter((child) => child.id !== nodeId);\n\n      node.children.forEach(deleteRecursive);\n    };\n\n    const updatedTree = { ...tree };\n    deleteRecursive(updatedTree);\n    setTree(updatedTree);\n  };\n\n  return (\n    <div>\n      <h1>Add Node</h1>\n      <TreeNode node={tree} onDelete={deleteNode} onAdd={addNode} />\n    </div>\n  );\n};\n\nexport default Tree;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAC9C,oBACEJ,OAAA;IAAKK,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAE7BP,OAAA;MAAAO,QAAA,EAAOL,IAAI,CAACM;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAGzBZ,OAAA,CAACF,YAAY;MAACe,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACD,IAAI,CAACY,EAAE,CAAE;MAAAP,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACrEZ,OAAA,CAACF,YAAY;MAACe,OAAO,EAAEA,CAAA,KAAMT,KAAK,CAACF,IAAI,CAACY,EAAE,CAAE;MAAAP,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,EAGpEV,IAAI,CAACK,QAAQ,IAAIL,IAAI,CAACK,QAAQ,CAACQ,MAAM,GAAG,CAAC,iBACxCf,OAAA;MAAAO,QAAA,EACGL,IAAI,CAACK,QAAQ,CAACS,GAAG,CAAEC,SAAS,iBAC3BjB,OAAA,CAACC,QAAQ;QAEPC,IAAI,EAAEe,SAAU;QAChBd,QAAQ,EAAEA,QAAS;QACnBC,KAAK,EAAEA;MAAM,GAHRa,SAAS,CAACH,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACM,EAAA,GAzBIjB,QAAQ;AA2Bd,MAAMkB,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC;IAC/BiB,EAAE,EAAE,CAAC;IACLN,KAAK,EAAE,WAAW;IAClBD,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMgB,OAAO,GAAIC,QAAQ,IAAK;IAC5B,MAAMC,YAAY,GAAIvB,IAAI,IAAK;MAC7B,IAAIA,IAAI,CAACY,EAAE,KAAKU,QAAQ,EAAE;QACxB,MAAME,OAAO,GAAG;UACdZ,EAAE,EAAEa,IAAI,CAACC,GAAG,CAAC,CAAC;UACdpB,KAAK,EAAE,YAAYmB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;UAC/BrB,QAAQ,EAAE;QACZ,CAAC;QACDL,IAAI,CAACK,QAAQ,CAACsB,IAAI,CAACH,OAAO,CAAC;MAC7B,CAAC,MAAM;QACLxB,IAAI,CAACK,QAAQ,CAACuB,OAAO,CAACL,YAAY,CAAC;MACrC;IACF,CAAC;IAED,MAAMM,WAAW,GAAG;MAAE,GAAGV;IAAK,CAAC;IAC/BI,YAAY,CAACM,WAAW,CAAC;IACzBT,OAAO,CAACS,WAAW,CAAC;EACtB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAMC,eAAe,GAAIhC,IAAI,IAAK;MAChCA,IAAI,CAACK,QAAQ,GAAGL,IAAI,CAACK,QAAQ,CAAC4B,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACtB,EAAE,KAAKmB,MAAM,CAAC;MAEpE/B,IAAI,CAACK,QAAQ,CAACuB,OAAO,CAACI,eAAe,CAAC;IACxC,CAAC;IAED,MAAMH,WAAW,GAAG;MAAE,GAAGV;IAAK,CAAC;IAC/Ba,eAAe,CAACH,WAAW,CAAC;IAC5BT,OAAO,CAACS,WAAW,CAAC;EACtB,CAAC;EAED,oBACE/B,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBZ,OAAA,CAACC,QAAQ;MAACC,IAAI,EAAEmB,IAAK;MAAClB,QAAQ,EAAE6B,UAAW;MAAC5B,KAAK,EAAEmB;IAAQ;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACQ,EAAA,CA/CID,IAAI;AAAAkB,GAAA,GAAJlB,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}